{
	// Event types are:
	//     STATE_IND = State indication: Generated by the item owner link to inform other links about the item value. There is
	//                 no distinction between the ones generated by the owner because of a value change (unsolicited STATE_IND) 
	//                 and those triggered by a READ_REQ event (solicited STATE_IND). 
	//     WRITE_REQ = Write request: Generated by other links to ask the item owner link to assign a new value to the item.
	//     READ_REQ = Read request: Generated by other links to ask the item owner link to generate a STATE_IND event for the item.

	// Enables logging of all received and distributed events. Optional, default is false. 
	"logEvents": true,

	// Defines the name of the file to which the log messages are written. In case no name is given or in case
	// an empty name is given the log message are only witten to standard out (stdout). Optional, default is empty.
	//"logFileName": "/weaver/log/weaver.log",
	//"logFileName": "/home/peter/weaver/weaver.log",

	// Defines the maximum size of the log file in bytes. When the log file becomes bigger it is renamed (for backup) 
	// and a new empty one is created. If 0 is given the size of the log file is not limited and log file backups are 
	// not performed. Optional, default is 0. 
	"maxLogFileSize": 1000000,

	// Defines the maximum number of log file backups. When the number of files becomes larger the oldest file will be deleted. 
	// If 0 is given log file backups are not performed. Optional, default is 0. 
	"maxLogFileCount": 3,

	// List of all items for which events (STATE_IND, WRITE_REQ, READ_REQ) can potentially be received or sent.
	"items": [
		// Definition of an item.
		//{
			// Unique identifier of item.
			//"id": "strom_zaehlerstand", 

			// Values assign to the item should have this data type. Possible value types are boolean, number 
			// and string. The value range of the data type number covers integer and floating point numbers.
			//"type": "number", 

			// Link which manages the item. That is, the link from which STATE_IND events are recieved and 
			// to which READ_REQ and WRITE_REQ are passed. 
			//"ownerId": "stromzaehler", 
		//},
		
		{ "id": "strom_zaehlerstand", "type": "number", "ownerId": "stromzaehler" },
		{ "id": "strom_verbrauch_gesamt", "type": "number", "ownerId": "stromzaehler" },
		{ "id": "strom_verbrauch_phase1", "type": "number", "ownerId": "stromzaehler" },
		{ "id": "strom_verbrauch_phase2", "type": "number", "ownerId": "stromzaehler" },
		{ "id": "strom_verbrauch_phase3", "type": "number", "ownerId": "stromzaehler" },
			
		{ "id": "helligkeit_aussen_ost", "type": "number", "ownerId": "wetterstation" },
		{ "id": "helligkeit_aussen_sued", "type": "number", "ownerId": "wetterstation" },
		{ "id": "helligkeit_aussen_west", "type": "number", "ownerId": "wetterstation" },
		{ "id": "helligkeit_aussen_daemmerung", "type": "number", "ownerId": "wetterstation" },
		{ "id": "wind_geschwindigkeit", "type": "number", "ownerId": "wetterstation" },
		{ "id": "regen_status", "type": "boolean", "ownerId": "wetterstation" },
			
		{ "id": "aussen_temp", "type": "number", "ownerId": "mosquitto" },
		
		{ "id": "puffer_sp1_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "puffer_sp2_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "puffer_td2_temp", "type": "number", "ownerId": "mosquitto" },

		{ "id": "fbh_modus", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_raum_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_absenk_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_heizkurve", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_abschalt_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_vorlauf_soll_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_vorlauf_ist_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "fbh_vorlauf_puffer_temp", "type": "number", "ownerId": "mosquitto" },

		{ "id": "ww_modus", "type": "number", "ownerId": "mosquitto" },
		{ "id": "ww_zk_soll_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "ww_zk_volumenstrom", "type": "number", "ownerId": "mosquitto" },
		{ "id": "ww_zk_vorlauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "ww_pk_vorlauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "ww_pk_ruecklauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "ww_pk_mischer_status", "type": "number", "ownerId": "mosquitto" },

		{ "id": "st_tagesertrag", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_gesamtertrag", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_kk_vorlauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_kk_ruecklauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_kk_pumpe_status", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_kk_pumpe_laufzeit", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_pk_vorlauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_pk_ruecklauf_temp", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_pk_pumpe_status", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_pk_pumpe_laufzeit", "type": "number", "ownerId": "mosquitto" },
		{ "id": "st_pk_volumenstrom", "type": "number", "ownerId": "mosquitto" },

		{ "id": "ebusd_herzschlag", "type": "void", "ownerId": "mosquitto" },
		{ "id": "weaver_herzschlag", "type": "void", "ownerId": "heart" },
	],
	
	// Interfaces to other systems and/or devices.
	"links": [
		{
			// Identifier for this link.
			"id": "stromzaehler",

			// Alteration rules for events and their values which are sent or received over the link.
			"modifiers" : [ 
				// Definition of a modifier.
				//{
					// The manipulation is restricted to events belonging to this item.
					//"itemId": "helligkeit",

					// Received number values are multiplied with the given factor and values which are going 
					// to be sent are divided by it.
					//"factor": 1000,

					// Received STATE_IND values for links only supporting STATE_IND can be suppressed in case
					// the new values do not differ significantly from the former ones. Only in case the values
					// are outside a tolerance they are stored and distributed to other links. The tolerance is 
					// defined by means of the fields absVariation and relVariation. STATE_IND suppression only 
					// takes place for values within the range defined by the fields minimum and maximum.
					//"suppressDuplicates":
					//{
						// Defines the tolerance between stored and received value as an absolute figure. 
						// Optional, default is 0.0.
						//"absVariation": 1.0,

						// Defines the tolerance between stored and received value as a relative figure in 
						// percent (0-100). Optional, default is 0.0.
						//"relVariation": 10.0,
						
						// Lower bound of range. Optional, default is a very small negative number.
						//"minimum": -100.0,
						
						// Upper bound of range. Optional, default is a very large positive number.
						//"minimum": 100.0,
					//}
				//},

				{ "itemId": "strom_zaehlerstand", "suppressDuplicates": { "absVariation": 1 } },
				{ "itemId": "strom_verbrauch_gesamt", "suppressDuplicates": { "absVariation": 10 } },
				{ "itemId": "strom_verbrauch_phase1", "suppressDuplicates": { "absVariation": 5 } },
				{ "itemId": "strom_verbrauch_phase2", "suppressDuplicates": { "absVariation": 5 } },
				{ "itemId": "strom_verbrauch_phase3", "suppressDuplicates": { "absVariation": 5 } },
			],

			// Link type specific parametrization.
			"port":	{
				// Name of serial device/port. For example /dev/ttyUSB0.
				"name": "/dev/smartmeter",
				
				// Speed as baud/bit rate. Possible values are 1200, 1800, 2400, 4800, 9600, 19200, 38400, 
				// 57600 or 115200.
				"baudRate": 9600,

				// Number of data bits per character. Possible values are 5, 6, 7 or 8.
				"dataBits": 7,

				// Number of stop bits per character. Possible values are 1 or 2.
				"stopBits": 1,

				// Parity. Possible values are even, odd or none.
				"parity": "even",

				// Regular expression for splitting the received byte stream into messages. The syntax must
				// match the one of POSIX extended regular expressions. For parsing and evaluation of the expression
				// regcomp and regexec are used. The expression must not have any marked subexpression.
				"msgPattern": "/.*!\r\n",

				// Enables logging of the received byte stream. Optional, default is false.
				//"logRawData": true,
				
				// Indicates whether the received byte stream has to be logged in hexadecimal representation.
				// Optional, default is false.
				//"logRawDataInHex": true,

				// Mapping of received message to one or more items.
				"bindings": [
					{ "itemId": "strom_zaehlerstand", "pattern": ".*1-0:1\\.8\\.0\\*255\\(([0-9]{8}\\.[0-9]{7}).*" }, // nnnnnnnn.nnnnnnn, kWh
					{ "itemId": "strom_verbrauch_phase1", "pattern": ".*1-0:21\\.7\\.255\\*255\\(([0-9]{6}\\.[0-9]{2}).*" }, // nnnnnn.nn, Watt
					{ "itemId": "strom_verbrauch_phase2", "pattern": ".*1-0:41\\.7\\.255\\*255\\(([0-9]{6}\\.[0-9]{2}).*" }, // nnnnnn.nn, Watt
					{ "itemId": "strom_verbrauch_phase3", "pattern": ".*1-0:61\\.7\\.255\\*255\\(([0-9]{6}\\.[0-9]{2}).*" }, // nnnnnn.nn, Watt
					{ "itemId": "strom_verbrauch_gesamt", "pattern": ".*1-0:1\\.7\\.255\\*255\\(([0-9]{6}\\.[0-9]{2}).*" } // nnnnnn.nn, Watt
				]
			}
		},
		{
			"id": "wetterstation", 
			
			"modifiers" : [ 
				//{ "itemId": "helligkeit_aussen_ost", "factor": 1000 },
				//{ "itemId": "helligkeit_aussen_sued", "factor": 1000 },
				//{ "itemId": "helligkeit_aussen_west", "factor": 1000 }
				{ "itemId": "helligkeit_aussen_ost", "suppressDuplicates": { "absVariation": 1, "minimum": 5 } },
				{ "itemId": "helligkeit_aussen_sued", "suppressDuplicates": { "absVariation": 1, "minimum": 5 } },
				{ "itemId": "helligkeit_aussen_west", "suppressDuplicates": { "absVariation": 1, "minimum": 5 } },
				{ "itemId": "helligkeit_aussen_daemmerung", "suppressDuplicates": {} },
				{ "itemId": "wind_geschwindigkeit", "suppressDuplicates": { "absVariation": 1 } },
				{ "itemId": "regen_status", "suppressDuplicates": {} },
			],

			// Link type specific parametrization.
			"port":	{
				"name": "/dev/weatherstation",
				"baudRate": 9600,
				"dataBits": 8,
				"stopBits": 1,
				"parity": "none",
				//"msgPattern": "\\x02.*\\x03\r\n",
				//"msgPattern": "[[.STX.]].*[[.ETX.]]\r\n",
				"msgPattern": "[[:cntrl:]].{62}*[[:cntrl:]]\r\n",
				//"logRawData": true,
				//"logRawDataInHex": true,
				"bindings": [
					{ "itemId": "helligkeit_aussen_ost", "pattern": ".{19}([0-9]{3}\\.[0-9]).*" }, // Format nnn.n, 0...150 kLux
					{ "itemId": "helligkeit_aussen_sued", "pattern": ".{25}([0-9]{3}\\.[0-9]).*" }, // Format nnn.n, 0...150 kLux
					{ "itemId": "helligkeit_aussen_west", "pattern": ".{31}([0-9]{3}\\.[0-9]).*" }, // Format nnn.n, 0...150 kLux
					{ "itemId": "helligkeit_aussen_daemmerung", "pattern": ".{37}([0-9]{3}).*" }, // Format nnn, 0...250 Lux, !!! wenn >250 Lux
					{ "itemId": "wind_geschwindigkeit", "pattern": ".{53}([0-9]{2}\\.[0-9]).*" }, // Format nn.n, 0..40 m/s,
					{ "itemId": "regen_status", "pattern": ".{51}([0-1]).*" } // 0/1
				]
			}
		},
		{
			// Identifier for this link.
			"id": "wiregate",

			// Link type specific parametrization.
			"knx": {
				// IP address passed to the KNX/IP gateway and used by it to contact weaver. 
				// It is ignored and not delivered in case the NAT mode is enabled. 
				"localIpAddr": "192.168.25.10",
			
				// Usage of network address translation (NAT mode) for accessing the KNX/IP gateway.
				// This mode is usually needed when the gateway is located on another network behind 
				// a router. Optional, default is false.
				"natMode": true,
			
				// IP address of KNX/IP gateway.
				"ipAddr": "192.168.25.12",
			
				// IP port on which KNX/IP gateway accepts tunnel requests. Optional, default is 3671.
				//"ipPort": "3671",
			
				// Delay in seconds between reconnect attempts to the KNX/IP gateway when the link has been 
				// lost. Optional, default is 60. 
				//"reconnectInterval": 60,
			
				// Delay in seconds between successive seinding of CONNECTION STATE REQUEST messages.
				// Optional, default is 30. 
				"connStateReqInterval": 30,
			
				// Timeout in seconds when waiting for the response to a CONNECTION REQUEST or 
				// CONNECTION STATE REQUEST on the control connection. Optional, default is 5.
				//"controlTimeout": 5,

				// Timeout in seconds when waiting for the corresponding L-Data.con to a L-Data.req on
				// the data connection. Optional, default is 5. 
				//"ldataConTimeout": 5,
			
				// Physical address used when accessing the KNX bus. Optional, default is 0.0.0.
				"physicalAddr": "1.1.252",

				// Enables logging of all received and sent UDP messages in hexadecimal format. 
				// Optional, default is false. 
				//"logRawMessages": true,
			
				// Enables logging of all received and sent payloads (cEMI frames) including message code, 
				// group address and physical address. Optional, default is false. 
				//"logData": true,

				// Mapping from KNX to items and vice versa.
				"bindings":	[
					{ "itemId": "strom_zaehlerstand", "stateGa": "3/4/10", "dpt": "13.013" },
					{ "itemId": "strom_verbrauch_phase1", "stateGa": "3/4/11", "dpt": "14.056" },
					{ "itemId": "strom_verbrauch_phase2", "stateGa": "3/4/12", "dpt": "14.056" },
					{ "itemId": "strom_verbrauch_phase3", "stateGa": "3/4/13", "dpt": "14.056" },
					{ "itemId": "strom_verbrauch_gesamt", "stateGa": "3/4/14", "dpt": "14.056" },

					{ "itemId": "helligkeit_aussen_ost", "stateGa": "5/5/80", "dpt": "9.004" },
					{ "itemId": "helligkeit_aussen_sued", "stateGa": "5/5/81", "dpt": "9.004" },
					{ "itemId": "helligkeit_aussen_west", "stateGa": "5/5/82", "dpt": "9.004" },
					{ "itemId": "helligkeit_aussen_daemmerung", "stateGa": "5/5/83", "dpt": "9.004" },
					{ "itemId": "wind_geschwindigkeit", "stateGa": "5/0/10", "dpt": "9.005" },
					{ "itemId": "regen_status", "stateGa": "5/0/20", "dpt": "1.001" },

					{ "itemId": "aussen_temp", "stateGa": "3/6/18", "dpt": "9.001" },

					{ "itemId": "puffer_sp1_temp", "stateGa": "3/6/10", "dpt": "9.001" },
					{ "itemId": "puffer_sp2_temp", "stateGa": "3/6/11", "dpt": "9.001" },
					{ "itemId": "puffer_td2_temp", "stateGa": "3/6/12", "dpt": "9.001" },

					{ "itemId": "fbh_modus", "stateGa": "3/6/23", "writeGa": "3/6/33", "dpt": "5.010" },
					{ "itemId": "fbh_raum_temp", "stateGa": "3/6/25", "writeGa": "3/6/35", "dpt": "9.001" },
					{ "itemId": "fbh_absenk_temp", "stateGa": "3/6/27", "dpt": "9.001" },
					{ "itemId": "fbh_heizkurve", "stateGa": "3/6/24", "writeGa": "3/6/34", "dpt": "9.001" },
					{ "itemId": "fbh_abschalt_temp", "stateGa": "3/6/26", "dpt": "9.001" },
					{ "itemId": "fbh_vorlauf_soll_temp", "stateGa": "3/6/20", "dpt": "9.001" },
					{ "itemId": "fbh_vorlauf_ist_temp", "stateGa": "3/6/22", "dpt": "9.001" },
					{ "itemId": "fbh_vorlauf_puffer_temp", "stateGa": "3/6/21", "dpt": "9.001" },

					{ "itemId": "ww_modus", "stateGa": "3/6/40", "writeGa": "3/6/50", "dpt": "5.010" },
					{ "itemId": "ww_zk_soll_temp", "stateGa": "3/6/41", "writeGa": "3/6/51", "dpt": "9.001" },
					{ "itemId": "ww_zk_vorlauf_temp", "stateGa": "3/6/45", "dpt": "9.001" },
					{ "itemId": "ww_zk_volumenstrom", "stateGa": "3/6/42", "dpt": "9.001" },
					{ "itemId": "ww_pk_vorlauf_temp", "stateGa": "3/6/44", "dpt": "9.001" },
					{ "itemId": "ww_pk_ruecklauf_temp", "stateGa": "3/6/46", "dpt": "9.001" },
					{ "itemId": "ww_pk_mischer_status", "stateGa": "3/6/47", "dpt": "5.010" },

					{ "itemId": "st_tagesertrag", "stateGa": "3/6/60", "dpt": "5.010" },
					{ "itemId": "st_gesamtertrag", "stateGa": "3/6/70", "dpt": "12.001" },
					{ "itemId": "st_kk_vorlauf_temp", "stateGa": "3/6/61", "dpt": "9.001" },
					{ "itemId": "st_kk_ruecklauf_temp", "stateGa": "3/6/62", "dpt": "9.001" },
					{ "itemId": "st_kk_pumpe_status", "stateGa": "3/6/63", "dpt": "5.001" },
					{ "itemId": "st_kk_pumpe_laufzeit", "stateGa": "3/6/64", "dpt": "7.007" },
					{ "itemId": "st_pk_vorlauf_temp", "stateGa": "3/6/65", "dpt": "9.001" },
					{ "itemId": "st_pk_ruecklauf_temp", "stateGa": "3/6/66", "dpt": "9.001" },
					{ "itemId": "st_pk_pumpe_status", "stateGa": "3/6/67", "dpt": "5.001" },
					{ "itemId": "st_pk_pumpe_laufzeit", "stateGa": "3/6/68", "dpt": "7.007" },
					{ "itemId": "st_pk_volumenstrom", "stateGa": "3/6/69", "dpt": "9.001" },
				]
			}
		},
		{
			// Identifier for this link.
			"id": "mosquitto",

			// Link type specific parametrization.
			"mqtt":	{
				// Prefix of client id passed to MQTT broker when connecting. It is expanded with "." and 
				// the process id. Optional, default is "weaver".
				//"clientIdPrefix": "weaver",

				// Hostname or IP address of the MQTT broker.
				"hostname": "timberwolf",

				// IP port on which MQTT broker is listening. Optional, default is 1883.
				//"port": 1883,

				// Delay in seconds between reconnect attempts to the MQTT broker when link has been lost.
				// Optional, default is 60. 
				"reconnectInterval": 60,

				// Retain flag for STATE_IND induced messages. Optional, default is false.
				"retainFlag": true,

				// Enables logging of all received and sent messages (payload and topic). 
				// Optional, default is false. 
				//"logMessages": true,
				
				// Topics to which weaver subsribes but without necessarily associating the received messages 
				// with any item. This can be useful for debugging purpose in conjunction with the logMessages flag. 
				// Optional, default is no topic. 
				//"subTopics": [ "ebus/#" ],
			
				// Mapping from MQTT to items and vice versa.
				"bindings":	[
					{ "itemId": "aussen_temp", "stateTopic": "ebus/aussen_temp/wert", "readTopic": "ebus/aussen_temp/wert/get" },

					{ "itemId": "puffer_sp1_temp", "stateTopic": "ebus/puffer_sp1/temp",	"readTopic": "ebus/puffer_sp1/temp/get" },
					{ "itemId": "puffer_sp2_temp", "stateTopic": "ebus/puffer_sp2/temp",	"readTopic": "ebus/puffer_sp2/temp/get" },
					{ "itemId": "puffer_td2_temp", "stateTopic": "ebus/puffer_td2/temp",	"readTopic": "ebus/puffer_td2/temp/get" },

					{ 
						"itemId": "fbh_modus",
						"stateTopics": [ "ebus/fbh_raum_temp_modus/modus", "ebus/fbh_modus/wert" ],
						"readTopic": "ebus/fbh_raum_temp_modus/modus/get",
						"writeTopic": "ebus/fbh_modus/wert/set"
					},
					{
						"itemId": "fbh_raum_temp",
						"stateTopics": [ "ebus/fbh_raum_temp_modus/temp", "ebus/fbh_raum_temp/wert" ],
						"readTopic": "ebus/fbh_raum_temp_modus/temp/get",
						"writeTopic": "ebus/fbh_raum_temp/wert/set"
					},
					{ "itemId": "fbh_absenk_temp",			"stateTopic": "ebus/fbh_absenk_temp/wert",		"readTopic": "ebus/fbh_absenk_temp/wert/get" },
					{ "itemId": "fbh_heizkurve",			"stateTopic": "ebus/fbh_heizkurve/wert", 		"readTopic": "ebus/fbh_heizkurve/wert/get",			"writeTopic": "ebus/fbh_heizkurve/wert/set" },
					{ "itemId": "fbh_abschalt_temp",		"stateTopic": "ebus/fbh_abschalt_temp/wert", 	"readTopic": "ebus/fbh_abschalt_temp/wert/get" },
					{ "itemId": "fbh_vorlauf_soll_temp",	"stateTopic": "ebus/fbh_vorlauf_soll_temp/wert","readTopic": "ebus/fbh_vorlauf_soll_temp/wert/get" },
					{ "itemId": "fbh_vorlauf_ist_temp", 	"stateTopic": "ebus/fbh_vf2/temp", 				"readTopic": "ebus/fbh_vf2/temp/get" },
					{ "itemId": "fbh_vorlauf_puffer_temp",	"stateTopic": "ebus/fbh_vf1/temp", 				"readTopic": "ebus/fbh_vf1/temp/get" },

					{
						"itemId": "ww_modus",
						"stateTopics": [ "ebus/ww_soll_temp_modus/modus", "ebus/ww_modus/wert" ],
						"readTopic": "ebus/ww_soll_temp_modus/modus/get",
						"writeTopic": "ebus/ww_modus/wert/set"
					},
					{
						"itemId": "ww_zk_soll_temp",
						"stateTopics": [ "ebus/ww_soll_temp_modus/temp", "ebus/ww_soll_temp/wert" ],
						"readTopic": "ebus/ww_soll_temp_modus/temp/get",
						"writeTopic": "ebus/ww_soll_temp/wert/set"
					},
					{ "itemId": "ww_zk_volumenstrom", 	"stateTopic": "ebus/ww_zk_volumenstrom/wert",	"readTopic": "ebus/ww_zk_volumenstrom/wert/get" },
					{ "itemId": "ww_zk_vorlauf_temp", 	"stateTopic": "ebus/ww_ntc3/temp", 				"readTopic": "ebus/ww_ntc3/temp/get" },
					{ "itemId": "ww_pk_vorlauf_temp", 	"stateTopic": "ebus/ww_ntc1/temp", 				"readTopic": "ebus/ww_ntc1/temp/get" },
					{ "itemId": "ww_pk_ruecklauf_temp", "stateTopic": "ebus/ww_ntc2/temp", 				"readTopic": "ebus/ww_ntc2/temp/get" },
					{ "itemId": "ww_pk_mischer_status", "stateTopic": "ebus/ww_pk_mischer_status/wert",	"readTopic": "ebus/ww_pk_mischer_status/wert/get" },

					{ "itemId": "st_tagesertrag", 		"stateTopic": "ebus/st_tagesertrag/wert",		"readTopic": "ebus/st_tagesertrag/wert/get" },
					{ "itemId": "st_gesamtertrag", 		"stateTopic": "ebus/st_gesamtertrag/wert",		"readTopic": "ebus/st_gesamtertrag/wert/get" },
					{ "itemId": "st_kk_vorlauf_temp", 	"stateTopic": "ebus/st_kk_vorlauf/temp", 		"readTopic": "ebus/st_kk_vorlauf/temp/get" },
					{ "itemId": "st_kk_ruecklauf_temp",	"stateTopic": "ebus/st_kk_ruecklauf/temp", 		"readTopic": "ebus/st_kk_ruecklauf/temp/get" },
					{ "itemId": "st_kk_pumpe_status",	"stateTopic": "ebus/st_kk_pumpe_status/wert", 	"readTopic": "ebus/st_kk_pumpe_status/wert/get" },
					{ "itemId": "st_kk_pumpe_laufzeit",	"stateTopic": "ebus/st_kk_pumpe_laufzeit/wert",	"readTopic": "ebus/st_kk_pumpe_laufzeit/wert/get" },
					{ "itemId": "st_pk_vorlauf_temp", 	"stateTopic": "ebus/st_pk_vorlauf/temp", 		"readTopic": "ebus/st_pk_vorlauf/temp/get" },
					{ "itemId": "st_pk_ruecklauf_temp",	"stateTopic": "ebus/st_pk_ruecklauf/temp", 		"readTopic": "ebus/st_pk_ruecklauf/temp/get" },
					{ "itemId": "st_pk_pumpe_status", 	"stateTopic": "ebus/st_pk_pumpe_status/wert", 	"readTopic": "ebus/st_pk_pumpe_status/wert/get" },
					{ "itemId": "st_pk_pumpe_laufzeit",	"stateTopic": "ebus/st_pk_pumpe_laufzeit/wert",	"readTopic": "ebus/st_pk_pumpe_laufzeit/wert/get" },
					{ "itemId": "st_pk_volumenstrom",	"stateTopic": "ebus/st_pk_volumenstrom/wert",	"readTopic": "ebus/st_pk_volumenstrom/wert/get" },
					
					{ "itemId": "ebusd_herzschlag", "stateTopic": "ebus/global/uptime" },

					//{ "itemId": "strom_zaehlerstand", "stateTopic": "strom/zaehlerstand" },
					//{ "itemId": "strom_verbrauch_gesamt", "stateTopic": "strom/verbrauch_gesamt" },
					//{ "itemId": "strom_verbrauch_phase1", "stateTopic": "strom/verbrauch_phase1" },
					//{ "itemId": "strom_verbrauch_phase2", "stateTopic": "strom/verbrauch_phase2" },
					//{ "itemId": "strom_verbrauch_phase3", "stateTopic": "strom/verbrauch_phase3" },

					//{ "itemId": "helligkeit_aussen_ost", "stateTopic": "helligkeit/aussen/ost" },
					//{ "itemId": "helligkeit_aussen_sued", "stateTopic": "helligkeit/aussen/sued" },
					//{ "itemId": "helligkeit_aussen_west", "stateTopic": "helligkeit/aussen/west" },
					//{ "itemId": "helligkeit_aussen_daemmerung", "stateTopic": "helligkeit/aussen/daemmerung" },
					//{ "itemId": "wind_geschwindigkeit", "stateTopic": "wind/geschwindigkeit" },
					//{ "itemId": "regen_status", "stateTopic": "regen/status" }
				]
			}
		},
		{
			// Identifier for this link.
			"id": "heart",

			// This link type supports the regular triggering of events.
			"generator": {

				// Associates event scheduling with items.
				"bindings":	[
					//{
						// Id of item for which the event will be produced.
						//"itemId": "weaver_herzschlag", 

						// Kind of event which will be produced. Possible values are STATE_IND, WRITE_REQ and 
						// READ_REQ. For STATE_IND the link needs to be the owner link whereas for WRITE_REQ 
						// and READ_REQ the link must not be owner link. 
						//"eventType": "STATE_IND", 
						
						// Value which will be assigned to STATE_IND and WRITE_REQ events. 
						//"value": "42",

						// Frequency in which the events will be generated. That is, the time duration in seconds 
						// between two successive events. 
						//"interval": 30,

						// Arriving READ_REQ events for STATE_IND schedules also trigger the STATE_IND event.
					//},

					{ "itemId": "weaver_herzschlag", "eventType": "STATE_IND", "interval": 60 }
				]
			}
		},
		{
			// Identifier for this link.
			"id": "fritzbox",

			// This link type supports the TR-064 protocol.
			"tr064": {
				"bindings":	[
				]
			}
		}
	]
}